<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: volcengine/vod/business/vod_workflow.proto

namespace Volc\Service\Vod\Models\Business\TranscodeActivity;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Volcengine.Vod.Models.Business.TranscodeActivity.SubtitleParams</code>
 */
class SubtitleParams extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string Language = 1;</code>
     */
    protected $Language = '';
    /**
     * Generated from protobuf field <code>string FontType = 2;</code>
     */
    protected $FontType = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Language
     *     @type string $FontType
     * }
     */
    public function __construct($data = NULL) {
        \Volc\Service\Vod\Models\GPBMetadata\VodWorkflow::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string Language = 1;</code>
     * @return string
     */
    public function getLanguage()
    {
        return $this->Language;
    }

    /**
     * Generated from protobuf field <code>string Language = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setLanguage($var)
    {
        GPBUtil::checkString($var, True);
        $this->Language = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string FontType = 2;</code>
     * @return string
     */
    public function getFontType()
    {
        return $this->FontType;
    }

    /**
     * Generated from protobuf field <code>string FontType = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFontType($var)
    {
        GPBUtil::checkString($var, True);
        $this->FontType = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(SubtitleParams::class, \Volc\Service\Vod\Models\Business\TranscodeActivity_SubtitleParams::class);

